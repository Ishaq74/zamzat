---
interface Props {
  allCategories: string[];
  allCuisineTypes: string[];
  allTags: string[];
}

const { allCategories, allCuisineTypes, allTags } = Astro.props;
---

<form id="filter-form"
      hx-get="/recipes" 
      hx-trigger="change, input delay:500ms"
      hx-target="#recipe-grid"
      hx-swap="innerHTML" 
      class="filters md:w-1/4 space-y-6">
  
  <input type="text" name="search" placeholder="Rechercher..."
         class="w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 placeholder-gray-400" />

  <select name="category" class="w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500">
    <option value="">Toutes les catégories</option>
    {allCategories.map(category => (
      <option value={category}>{category}</option>
    ))}
  </select>

  <select name="cuisineType" class="w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500">
    <option value="">Tous les types de cuisine</option>
    {allCuisineTypes.map(cuisineType => (
      <option value={cuisineType}>{cuisineType}</option>
    ))}
  </select>

  <div class="tags space-y-2">
    <div class="text-sm font-medium text-gray-700">Tags:</div>
    <div class="space-y-1">
      {allTags.map(tag => (
        <label class="flex items-center space-x-2">
          <input type="checkbox" name="tags" value={tag}
                 class="h-4 w-4 border-gray-300 rounded focus:ring-2 focus:ring-blue-500" />
          <span class="text-sm text-gray-700">{tag}</span>
        </label>
      ))}
    </div>
  </div>

  <button type="reset" class="w-full p-3 bg-gray-600 text-white rounded-md hover:bg-gray-700 focus:ring-2 focus:ring-blue-500">
    Réinitialiser
  </button>
</form>
